@use 'variables';
@use 'after-before';
@use 'list';
@use 'flex';
@use 'typography';

//
// Vertical Component
//

.vertical {
  @extend .flex-column;
  @extend .after-before;

  &::before {
    background: var(--white-normal);
    border: 1px solid var(--gray-transparent);
    opacity: 1;
  }

  &::after {
    opacity: 0;
  }
}

.selection--default {
  li {
    @extend .flex-column;
    @extend .vertical;

    align-items: center;

    width: 16rem;
    gap: var(--gap-s);
    flex: none;

    @media screen and (max-width: variables.$screen-small-l) {
      width: 12rem;
    }

    h3 {
      @extend .h3--small;
    }

    p {
      @extend .p--small;
    }

    &::before {
      border-color: var(--gray-dynamic);
      background: var(--white-dynamic);
    }

    &::after {
      border-color: var(--gray-high-contrast);
      background: var(--gray-normal);
    }

    &:hover {

      &::before,
      &::after {
        top: calc(var(--bttn-s) / -2);
        left: calc(var(--bttn-s) / -2);
        right: calc(var(--bttn-s) / -2);
        bottom: calc(var(--bttn-s) / -2);
        border-radius: var(--round-m);

        border-color: var(--gray-high-contrast);
        background: var(--gray-normal);

        opacity: 0;
      }

      &::after {
        opacity: 1;
      }
    }

    &.plain {
      @extend .no-padding-margin;

      width: var(--pad-xl);
      border-radius: 0;
      border: 0;
      background-color: transparent;
      justify-content: center;

      &::before,
      &::after {
        display: none;
      }
    }
  }
}

.selection--minimal {
  li {
    @extend .vertical;

    padding: var(--bttn-s);
    gap: var(--gap-xs);

    &::before {
      opacity: 0;
    }

    &[aria-current="page"] {
      pointer-events: none;
    }

    &:hover,
    &[aria-current="page"] {
      &::before {
        top: calc(var(--bttn-s) / -4);
        left: calc(var(--bttn-s) / -4);
        right: calc(var(--bttn-s) / -4);
        bottom: calc(var(--bttn-s) / -4);
        opacity: 1;
      }
    }

    &[aria-current="page"] {
      &::before {
        background-color: var(--gray-dynamic);
        border-color: transparent;
      }
    }
  }
}

.selection--static {
  @extend .flex-row-center;

  >ul,
  >ol {
    @extend .flat;

    flex: auto;

    @media screen and (max-width: variables.$screen-normal-m) {
      flex-direction: column;
    }
  }

  li {
    @extend .vertical;

    padding: var(--bttn-l) var(--bttn-xl);

    gap: var(--gap-s);

    @media screen and (min-width: variables.$screen-small-l) and (max-width: variables.$screen-normal-m) {
      flex-direction: row !important;
    }

    &::before {
      background-color: var(--gray-background);
      border: 1px solid var(--gray-transparent);
    }

    .img {
      @extend .flex-row-center;
    }

    p {
      margin-bottom: 0;
    }
  }
}

.selection--partners {
  li {
    @extend .flex-column-start;

    align-self: flex-start;
    flex: auto;
    gap: var(--gap-s);
    max-width: 15.625rem;
  }

  svg {
    --size: 12.625rem;

    @media screen and (max-width: variables.$screen-normal-m) {
      --size: 10rem;
    }

    @media screen and (max-width: variables.$screen-small-l) {
      --size: 8rem;
    }

    width: var(--size);
    height: calc(var(--size) * 0.7425742574);
  }

  p {
    @extend .p--small;

    text-align: center;
    align-self: stretch;
  }


  ul,
  ol {
    @media screen and (max-width: variables.$screen-normal-l) {
      gap: var(--gap-xl);
    }

    li {
      @media screen and (max-width: variables.$screen-normal-l) {
        padding: 0;
      }
    }
  }
}

.selection--journey {
  li {
    @extend .flex-column;
    @extend .vertical;

    align-items: center;
    align-self: flex-end;

    width: 18.3625rem;
    gap: var(--gap-s);
    flex: none;

    &::before {
      @extend .p--regular;
      @extend .flex-row-center;

      align-self: initial;
      position: relative;

      width: var(--bttn-xl);
      height: var(--bttn-xl);

      color: var(--white-static);
      background: var(--blue-deep);
      border-radius: var(--round);
      border: 0;
    }

    // Add more if necessary
    @for $i from 1 through 10 {
      &:nth-child(#{$i})::before {
        content: "#{$i}";
      }
    }

    &::after {
      opacity: 1;
      border-color: var(--gray-dynamic);
      background: var(--gray-background);
    }
  }

  p {
    @extend .p--small;
  }
}

.selection--checkbox {
  @extend .selection--default;

  input,
  label {
    cursor: pointer;
  }

  label {
    @extend .flex-column-center;

    font-weight: initial;
    gap: var(--gap-s);
    padding: var(--bttn-l);
  }

  li {
    padding: 0;
    align-self: initial;
    width: 17.5rem;

    @media screen and (max-width: variables.$screen-small-l) {
      width: 15rem;
    }
  }

  p {
    @extend .p--small;
  }

  svg {
    --size: 8rem;

    @media screen and (max-width: variables.$screen-small-l) {
      --size: 6rem;
    }

    width: var(--size);
    height: var(--size);
  }
}

.selection--careers {
  @extend .flex-column;

  gap: var(--gap-xxl);
  align-self: initial;

  width: 100%;
  max-width: var(--max-m);

  >ul,
  >ol {
    --gap: var(--gap-xxl);

    @media screen and (max-width: variables.$screen-normal-l) {
      --gap: var(--gap-l);
    }

    flex-wrap: wrap;
    gap: var(--gap);
    padding: 0;

    li {
      @extend .vertical;
      @extend .flex-row-center;

      flex: none;
      gap: var(--gap-s);
      padding: calc(var(--pad-m) / 2) var(--pad-xs);

      width: calc(50% - (var(--gap) / 2));
      max-width: initial;

      @media screen and (max-width: variables.$screen-small-l) {
        width: 100%;
      }

      &::before {
        background: var(--gray-background);
        border-color: var(--gray-dynamic);
      }

      &::after {
        background: var(--gray-normal);
        border-color: var(--gray-high-contrast);
      }

      &:hover {

        &::before,
        &::after {
          top: calc(var(--bttn-s) / -2);
          left: calc(var(--bttn-s) / -2);
          right: calc(var(--bttn-s) / -2);
          bottom: calc(var(--bttn-s) / -2);
          border-radius: var(--round-m);

          opacity: 0;
        }

        &::after {
          opacity: 1;

        }
      }
    }

    a {
      @extend .a--default;
    }

    svg {
      --size: 6rem;

      @media screen and (max-width: variables.$screen-small-l) {
        --size: 3rem;
      }

      width: var(--size);
      height: var(--size);
    }
  }
}

//
//  Listing styles
//

.selection {
  @extend .flex-row-start;

  h3 {
    color: var(--blue-dark);
  }

  ul,
  ol {
    @extend .flex-row;

    gap: var(--gap-l);
  }

  li {
    padding: var(--bttn-l);
  }

  .text {
    gap: var(--gap-xs);
  }


  //
  // Type
  //

  &.default {
    @extend .selection--default;
  }

  &.center-static,
  &.commitment {
    @extend .selection--static;

    ul,
    ol {
      gap: var(--gap-xxl);

      @media screen and (max-width: variables.$screen-normal-m) {
        gap: var(--gap-l);
      }

      @media screen and (max-width: variables.$screen-small-l) {
        gap: var(--gap-xxl);
      }
    }
  }

  &.cta,
  &.jurney {
    @extend .selection--static;
  }

  &.partners {
    @extend .selection--partners;
  }

  &.journey {
    @extend .selection--journey;
  }

  &.checkbox {
    @extend .selection--checkbox;
  }

  &.careers {
    @extend .selection--careers;
  }
}