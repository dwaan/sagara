@use 'variables';
@use 'typography';
@use 'selection';
@use 'after-before';
@use 'flex';

:root {
  --menu-shadow: 0 var(--pad-xl) var(--pad-xl) 0 rgba(0, 0, 0, 0.25);
}


//
//! Property to animate conic-gradient in logo
//

@property --rad0 {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 0%;
}

@property --rad1 {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 70%;
}

@property --rad2 {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 90%;
}

@property --rad3 {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 95%;
}

//
//! Gradient logo
//


.logo {
  --width: 9.875rem;
  --height: 3.625rem;

  position: relative;
  z-index: 1;

  mask-size: var(--width) var(--height);
  mask-position: left center;
  mask-image: url(../img/logo-mask.svg);
  mask-repeat: no-repeat;

  width: var(--width);
  height: var(--height);

  @media screen and (max-width: variables.$screen-small-l) {
    --width: 8.175rem;
    --height: 3rem;
  }

  span {
    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--height);
    flex: auto;

    &.name {
      color: transparent;
      background: var(--blue-deep);
    }

    &.gradient {
      --rad0: 0%;
      --rad1: 70%;
      --rad2: 90%;
      --rad3: 95%;

      flex: none;
      width: var(--height);
      border-radius: 100%;

      background: conic-gradient(from -90deg, var(--neon-green) var(--rad0), var(--blue-cyan) var(--rad1), var(--neon-blue) var(--rad2), var(--blue-normal) var(--rad3), var(--blue-deep) 100%);
      transition: --rad0 var(--fast) var(--ease-back), --rad1 var(--fast) var(--ease-back), --rad2 var(--fast) var(--ease-back), --rad3 var(--fast) var(--ease-back);

      &.plain {
        --rad0: 100%;
        --rad1: 100%;
        --rad2: 100%;
        --rad3: 100%;

        opacity: 0;
        background: conic-gradient(from -90deg, var(--neon-green) var(--rad0), var(--blue-cyan) var(--rad1), var(--neon-blue) var(--rad2), var(--blue-normal) var(--rad3), var(--blue-deep) 100%);
        transition: opacity .08s ease, --rad0 .64s var(--ease-back), --rad1 .64s var(--ease-back), --rad2 .64s var(--ease-back), --rad3 .64s var(--ease-back);
        transition-delay: .16s;

        &.hover {
          opacity: 1;
          background: conic-gradient(from -90deg, var(--neon-green) var(--rad0), var(--blue-cyan) var(--rad1), var(--neon-blue) var(--rad2), var(--blue-normal) var(--rad3), var(--blue-deep) 100%);
        }
      }
    }
  }

  &.square {
    --width: 16.9285714286rem;
    --height: 6rem;

    width: var(--height);
    overflow: hidden;
  }

  .hover.plain.gradient,
  &:hover .gradient {
    --rad0: 0%;
    --rad1: 20%;
    --rad2: 40%;
    --rad3: 60%;
  }
}


//
//! Header
//

header {
  @extend .flex-row-center;
  @extend .no-padding-margin;

  justify-content: space-between;

  position: relative;
  z-index: 4;

  padding: var(--pad-s) var(--pad-xxl);

  @media screen and (max-width: variables.$screen-wide-s) {
    padding: var(--pad-m) var(--pad-xl);
  }

  @media screen and (max-width: variables.$screen-normal-l) {
    padding: var(--pad-m);
  }

  >div {
    @extend .flex-row-center;

    z-index: 3;

    a {
      @extend .flex-row-center;
    }
  }

  li {
    @extend .flex-column-center;

    gap: var(--gap-xs);
    z-index: 3;

    @media screen and (max-width: variables.$screen-normal-l) {
      gap: var(--gap-xl);
    }
  }

  a {
    color: var(--dark-normal);
    align-self: center;

    &:hover {
      div.gradient {
        --rad1: 20%;
        --rad2: 40%;
        --rad3: 60%;
      }
    }
  }

  input[type=radio] {
    display: none;
  }
}

//
// ! Desktop and Mobile Menu switcher
//

// Desktop menu toggle
#menu-close-trigger {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;

  cursor: auto;

  display: block;
}

// Desktop menu toggle
#menu-close {
  &:checked+#menu-close-trigger {
    display: none;
  }
}

// Mobile and Tablet menu toggle
#menu-show-trigger {
  position: relative;
  z-index: 3;

  @media screen and (max-width: variables.$screen-normal-l) {
    display: flex;
  }

  i {
    @extend .flex-column-center;
    @extend .after-before;

    display: none;
    width: 2rem;
    height: 1.25rem;

    border-top: .125rem solid var(--dark-normal);

    transition: all var(--fast) var(--ease-back);

    @media screen and (max-width: variables.$screen-normal-l) {
      display: block;
    }

    @media screen and (max-width: variables.$screen-small-l) {
      width: 1.5rem;
    }

    &::before,
    &::after {
      height: .125rem;
      top: calc(50% - .125rem);
      background: var(--dark-normal);

      transition: all var(--fast) var(--ease-back);
    }

    &::after {
      top: calc(100% - .125rem);
      right: .25rem;
    }
  }

  &:hover {
    i {
      border-color: var(--neon-blue);

      &::before,
      &::after {
        background: var(--neon-blue);
      }
    }
  }

  span {
    @extend .flex-row-center;

    gap: var(--gap-s);
    display: none;

    @media screen and (max-width: variables.$screen-normal-l) {
      display: flex;
    }
  }

  &+menu {

    @media screen and (max-width: variables.$screen-normal-l) {
      opacity: 0;
      transition: opacity var(--fast) var(--ease-back);
    }
  }
}

// Mobile and Tablet menu toggle
#menu-show {
  &+label {
    @media screen and (max-width: variables.$screen-normal-l) {
      +menu {
        transform: translate(0, 2rem);
        transition: transform var(--fast) var(--ease-back-in), opacity var(--fast) var(--ease-back-in);
      }

      +menu>li {
        opacity: 0;
        transform: translate(2rem, 0);
        transition: transform var(--fast) var(--ease-back), opacity var(--fast) var(--ease-back);

        // Add more if menu content is more than 8
        @for $i from 1 through 8 {
          &:nth-child(#{$i}) {
            transition-delay: #{$i*32}ms;
          }
        }
      }
    }
  }

  // Show menu
  &:checked+label {

    // Make hamburger icon into x icon
    i {
      border-color: transparent;

      &::before,
      &::after {
        top: calc(50% - .125rem);
        transform: rotate(45deg);
        right: 0;
      }

      &::after {
        transform: rotate(-45deg);
      }
    }

    // Menu is shown
    +menu {
      @media screen and (max-width: variables.$screen-normal-l) {
        pointer-events: all;
        transition: transform var(--fast) var(--ease-back), opacity var(--fast) var(--ease-back);

        &,
        >li {
          opacity: 1;
          transform: translate(0, 0);
        }
      }
    }
  }
}

//
//! Popup menu
//

nav.menu {
  @extend .flex-row-center;

  gap: var(--gap-xl);

  position: static;
  z-index: 2;

  >a {
    @extend .a--default;

    flex: auto;

    @media screen and (max-width: variables.$screen-normal-l) {
      display: flex;
    }
  }

  >label {
    order: 2;

    >span {
      pointer-events: none;
    }

    @media screen and (max-width: variables.$screen-normal-l) {
      pointer-events: all;
    }
  }

  >menu {
    order: 3;
    align-self: center;

    z-index: 2;

    @media screen and (max-width: variables.$screen-normal-l) {
      position: absolute;
      top: calc(var(--pad-m) * 2.5);
      right: 0;
      left: 0;

      padding: var(--pad-xl) var(--pad-xl) var(--pad-xxl);

      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-start;

      pointer-events: none;
      overflow: hidden;

      background: var(--white-transparent);
      box-shadow: var(--menu-shadow);
      backdrop-filter: blur(var(--pad-l));
    }

    @media screen and (max-width: variables.$screen-small-l) {
      padding: var(--pad-xxl) var(--pad-l);
      top: calc(var(--pad-m) * 4);
    }

    >li {
      z-index: 2;

      pointer-events: all;

      >label {
        display: block;
        align-self: stretch;
      }

      >a,
      >label a {
        @extend .flex-row-center;
        @extend .before;

        z-index: 2;

        flex: none;
        gap: var(--gap-xs);

        @media screen and (max-width: variables.$screen-normal-l) {
          justify-content: flex-start;
        }

        @media screen and (max-width: variables.$screen-small-l) {
          gap: var(--gap-l);
        }

        &::before {
          background: var(--neon-green);
          border: none;
          opacity: 0;
        }

        .arrow {
          width: 1rem;

          @media screen and (max-width: variables.$screen-wide-m) {
            display: none;
          }

          @media screen and (max-width: variables.$screen-normal-l) {
            display: flex;
            width: 100%;
          }

          &::before,
          &::after {
            transition: border var(--fast) var(--ease-back);
          }

          &::before {
            right: calc(var(--bttn-m) / 4);
          }

          &::after {
            right: 0;
          }
        }
      }

      >label a {
        pointer-events: none;
      }

      //
      //! Menu radio switcher
      //

      &:hover,
      &[aria-current="page"],
      input:checked {
        z-index: 1;

        >a,
        >label a,
        +label a {
          color: var(--dark-static);

          &::before {
            top: calc(var(--bttn-m) / -2);
            left: calc(var(--bttn-m) / -1.25);
            right: calc(var(--bttn-m) / -1.25);
            bottom: calc(var(--bttn-m) / -2);
            opacity: 1;
          }
        }
      }

      &[aria-current="page"] {

        >a,
        >label a,
        +label a {
          color: var(--white-static);

          &::before {
            background: var(--neon-blue);
          }
        }
      }

      input:checked {

        >a,
        >label a,
        +label a {
          color: var(--dark-static);

          &::before {
            background: var(--neon-green);
          }
        }
      }

      // Show popup menu

      >nav.popup {
        opacity: 0;

        pointer-events: none;

        transform: translate(0, 2rem);
        transition: all var(--fast) var(--ease-back-in);

        @media screen and (max-width: variables.$screen-normal-l) {
          height: 0;
          margin-top: calc(var(--gap-xl) * -1);
          transform: translate(0, 0);
          pointer-events: none;
        }

        .button,
        menu>li {
          opacity: 0;
          transform: translate(0, 2rem);
          transition: transform var(--fast) var(--ease-back), opacity var(--fast) var(--ease-back);

          @media screen and (max-width: variables.$screen-normal-l) {
            transform: translate(2rem, 0);
          }
        }
      }

      // Show popup menu
      input:checked+label+nav.popup {
        margin-top: 0;

        opacity: 1;

        transform: translate(0, 0);
        transition: all var(--fast) var(--ease-back);

        @media screen and (max-width: variables.$screen-normal-l) {
          margin-top: 0;
          height: auto;
          pointer-events: all;
        }

        li,
        a {
          pointer-events: all;
        }

        .button,
        menu>li {
          opacity: 1;
          transform: translate(0, 0);
        }

        menu>li {

          // Add more if menu content is more than 8
          @for $i from 1 through 8 {
            &:nth-child(#{$i}) {
              transition-delay: #{$i*32}ms;
            }
          }
        }

        .button {
          transition-delay: 128ms;
        }
      }
    }
  }

  >.accessibility {
    --size: 1.5rem;

    order: 4;

    @media screen and (max-width: variables.$screen-normal-l) {
      order: 1;
    }

    @media screen and (max-width: variables.$screen-normal-m) {
      --size: 2rem;
    }

    @media screen and (max-width: variables.$screen-small-l) {
      --size: 1.75rem;
    }

    &,
    svg {
      width: var(--size);
      height: var(--size);
    }

    &:hover {
      --svg-stroke: var(--neon-blue);
    }
  }
}

nav.popup {
  @extend .flex-column-center;
  @extend .selection--minimal;

  position: absolute;
  z-index: 1;
  top: calc(var(--pad-m) * 2);
  left: 0;
  right: 0;
  padding: var(--pad-l) var(--pad-xxl) var(--pad-m);

  gap: var(--gap-xl);

  pointer-events: none;

  background: var(--white-transparent);
  box-shadow: var(--menu-shadow);
  backdrop-filter: blur(var(--pad-l));

  @media screen and (max-width: variables.$screen-wide-s) {
    top: calc(var(--pad-m) * 2.25);
  }

  @media screen and (max-width: variables.$screen-normal-l) {
    top: initial;
    position: static;
    padding: 0;
    gap: var(--pad-xs);

    background: initial;
    box-shadow: initial;
    backdrop-filter: initial;
  }

  // submenu
  >menu {
    gap: calc(var(--gap-l) / 2) var(--gap-xl);
    flex-wrap: wrap;

    @media screen and (max-width: variables.$screen-normal-l) {
      justify-content: flex-start;
      margin: 0 calc(var(--bttn-s) * -1);
    }

    a {
      @extend .a--submenu;

      text-align: center;

      @media screen and (max-width: variables.$screen-normal-l) {
        text-align: left;
      }

      strong {
        font-weight: 600;
      }
    }
  }

  li {
    align-self: stretch;

    min-width: 12rem;
    width: calc(25% - var(--gap-xl));
    max-width: 13.75rem;

    @media screen and (max-width: variables.$screen-normal-l) {
      flex-direction: row;

      width: 100%;
      min-width: initial;
      max-width: initial;

      padding-top: calc(var(--bttn-s) / 3);
      padding-bottom: calc(var(--bttn-s) / 3);
    }
  }

  .button {
    @media screen and (max-width: variables.$screen-normal-l) {
      width: 100%;
    }
  }

  svg {
    --size: 8rem;

    width: var(--size);
    height: var(--size);

    @media screen and (max-width: variables.$screen-normal-l) {
      --size: 3rem;
    }
  }
}


//
//! Accessibility options
//

#a11y {
  position: fixed;
  z-index: 5;

  dialog.options {
    @extend .flex-column-start;
    @extend .after-before;

    position: fixed;
    z-index: -1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    opacity: 0;
    pointer-events: none;

    margin: 0;
    width: 100vw;
    height: 100vh;

    color: var(--dark-normal);
    border: none;
    background: var(--dark-background);

    transition: all var(--fast) var(--ease-back);

    h3 {
      @extend .h3--small;

      margin: 0;
    }

    form {
      @extend .flex-column;

      gap: var(--gap-s);

      position: fixed;
      top: 50%;
      left: 50%;

      width: 23.625rem;
      max-width: calc(100vw - var(--pad-xxl));
      padding: var(--pad-m) var(--pad-l);

      background: var(--white-transparent);
      border: .0625rem solid var(--gray-transparent);

      border-radius: var(--round-m);
      box-shadow: var(--menu-shadow);
      backdrop-filter: blur(var(--pad-l));

      transform: translate(-50%, calc(-50% + 2rem));
      transition: all var(--fast) var(--ease-back);

      @media screen and (max-width: variables.$screen-small-l) {
        gap: var(--gap-l);

        padding: var(--pad-xl);
      }

      article {
        @extend .flex-column;

        gap: var(--gap-s);

        @media screen and (max-width: variables.$screen-small-l) {
          gap: var(--gap-l);
        }

        >p.row,
        >label {
          @extend .flex-row-start;

          gap: var(--gap-s);

          margin: 0;
          padding: var(--gap-s) 0 0;

          border-top: .0625rem solid var(--gray-transparent);
          transition: all var(--fast) var(--ease-back);

          @media screen and (max-width: variables.$screen-small-l) {
            gap: var(--gap-l);

            padding: var(--gap-l) 0 0;
          }
        }

        >label:hover {
          color: var(--blue-normal);
        }

        >p.row {
          gap: var(--gap-xs);

          span {
            display: block;
            margin-right: auto;
          }
        }
      }

      label {
        @extend .a--submenu;

        font-weight: 600;
      }

      input[type=checkbox] {
        border: .0625rem solid var(--dark-normal);
        background-color: transparent;

        width: 1.25rem;
        height: 1.25rem;

        appearance: none;
        border-radius: var(--round);
      }
    }
  }

  #accessibility:checked+dialog.options {
    z-index: 1;
    opacity: 1;
    pointer-events: all;

    form {
      transform: translate(-50%, -50%);
    }
  }

  #lang {
    &+span {
      +label {
        color: var(--white-static);

        &::before {
          background: var(--neon-blue);
        }

        +label {
          color: var(--dark-normal);

          &::before {
            background: var(--gray-transparent);
          }
        }
      }
    }

    &:checked+span {
      +label {
        color: var(--dark-normal);

        &::before {
          background: var(--gray-transparent);
        }

        +label {
          color: var(--white-static);

          &::before {
            background: var(--neon-blue);
          }
        }
      }
    }
  }
}